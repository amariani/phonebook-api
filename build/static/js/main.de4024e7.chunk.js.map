{"version":3,"sources":["components/Filter.js","components/Form.js","components/NotificationMesage.js","components/Persons.js","services/persons.js","App.js","index.js"],"names":["Filter","searchTerm","filterChangeHandler","clearFilter","value","onChange","onClick","Form","submitHandler","nameValue","phoneValue","nameChangeHandler","numberChangeHandler","onSubmit","type","disabled","NotificationMesage","notificationType","message","classNameType","className","Persons","persons","deleteHandler","map","p","name","number","id","baseUrl","axios","get","then","res","data","dataObject","post","newData","put","response","delete","App","useState","setPersons","newName","setNewName","newPhone","setNewPhone","setSearchTerm","setNotificationType","notificationMessage","setMotificationMessage","useEffect","personsService","initialPersons","detectDuplicate","find","event","target","preventDefault","duplicatedPerson","window","confirm","newPersonData","catch","e","console","error","newPersonResponse","concat","setTimeout","filter","toLowerCase","indexOf","personFound","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.de4024e7.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = ({ searchTerm, filterChangeHandler, clearFilter }) => {\n  return (\n    <div>\n      Filter shown with:{\" \"}\n      <input value={searchTerm} onChange={filterChangeHandler} />\n      <button onClick={clearFilter}>Clear Filter</button>\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst Form = ({\n  submitHandler,\n  nameValue,\n  phoneValue,\n  nameChangeHandler,\n  numberChangeHandler,\n}) => {\n  return (\n    <form onSubmit={submitHandler}>\n      <h3>Add New</h3>\n      <div>\n        name: <input value={nameValue} onChange={nameChangeHandler} />\n      </div>\n      <div>\n        number: <input value={phoneValue} onChange={numberChangeHandler} />\n      </div>\n      <div>\n        <button type=\"submit\" disabled={!nameValue || !phoneValue}>\n          add\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\n\nconst NotificationMesage = ({ notificationType, message }) => {\n  if (!message) {\n    return null;\n  }\n\n  const classNameType = notificationType === \"error\" ? \"error\" : \"success\";\n\n  return (\n    <div className={`NotificationMesage__wrapper ${classNameType}`}>\n      {message}\n    </div>\n  );\n};\n\nexport default NotificationMesage;\n","import React from \"react\";\n\nconst Persons = ({ persons, deleteHandler }) => {\n  return (\n    <>\n      <h2>Numbers</h2>\n      <ul>\n        {persons.map((p) => (\n          <li key={p.id}>\n            {p.name} {p.number}{\" \"}\n            <button onClick={() => deleteHandler(p.id)}>delete</button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Persons;\n","import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((res) => res.data);\n};\n\nconst create = (dataObject) => {\n  const request = axios.post(baseUrl, dataObject);\n  return request.then((res) => res.data);\n};\n\nconst update = (id, newData) => {\n  const request = axios.put(`${baseUrl}/${id}`, newData);\n  return request.then((response) => response.data);\n};\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((response) => response.data);\n};\n\nexport default { getAll, create, update, remove };\n","import React, { useEffect, useState } from \"react\";\nimport Filter from \"./components/Filter\";\nimport Form from \"./components/Form\";\nimport NotificationMesage from \"./components/NotificationMesage\";\nimport Persons from \"./components/Persons\";\nimport personsService from \"./services/persons\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newPhone, setNewPhone] = useState(\"\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [notificationType, setNotificationType] = useState(null);\n  const [notificationMessage, setMotificationMessage] = useState(null);\n\n  useEffect(() => {\n    personsService.getAll().then((initialPersons) => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handlePhoneChange = (event) => {\n    setNewPhone(event.target.value);\n  };\n\n  const handleFilterChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const handlePersonAdd = (event) => {\n    event.preventDefault();\n    const duplicatedPerson = detectDuplicate(newName);\n\n    if (duplicatedPerson) {\n      const result = window.confirm(\n        `${newName} is already added to phonebook, replace the old number with a new one?`\n      );\n      if (result) {\n        const newPersonData = {\n          ...duplicatedPerson,\n          number: newPhone,\n        };\n        personsService\n          .update(duplicatedPerson.id, newPersonData)\n          .then((res) => {\n            setPersons(persons.map((p) => (p.name !== newName ? p : res)));\n            setNotificationType(\"success\");\n            setMotificationMessage(`Updated ${newName}`);\n          })\n          .catch((e) => {\n            console.error(`Error:`, e);\n            setNotificationType(\"error\");\n            setMotificationMessage(`${newName} could not be updated`);\n          });\n      }\n    } else {\n      const newPerson = { name: newName, number: newPhone };\n      personsService\n        .create(newPerson)\n        .then((newPersonResponse) => {\n          setPersons(persons.concat(newPersonResponse));\n          setNotificationType(\"success\");\n          setMotificationMessage(`Added ${newName}`);\n        })\n        .catch((e) => {\n          console.error(`Error:`, e.response.data);\n          setNotificationType(\"error\");\n          setMotificationMessage(`${e.response.data.error}`);\n        });\n    }\n\n    // Notification cleanup\n    setTimeout(() => {\n      setMotificationMessage(null);\n    }, 5000);\n\n    setNewName(\"\");\n    setNewPhone(\"\");\n  };\n\n  const detectDuplicate = (name) => {\n    return persons.find((p) => p.name === name);\n  };\n\n  const filteredPersons = () =>\n    persons.filter((p) => {\n      return p.name.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1;\n    });\n\n  const deletePerson = (id) => {\n    const personFound = persons.find((p) => p.id === id);\n    const result = window.confirm(`Delete ${personFound.name}?`);\n\n    if (result) {\n      personsService\n        .remove(id)\n        .then(() => {\n          setPersons(persons.filter((p) => p.id !== id));\n          setNotificationType(\"success\");\n          setMotificationMessage(`Removed ${personFound.name}`);\n        })\n        .catch((e) => {\n          console.error(`Error:`, e);\n          setNotificationType(\"error\");\n          setMotificationMessage(\n            `${personFound.name} has already been removed from database.`\n          );\n          setPersons(persons.filter((p) => p.id !== id));\n        });\n\n      // Notification cleanup\n      setTimeout(() => {\n        setMotificationMessage(null);\n      }, 3000);\n    }\n  };\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <NotificationMesage\n        notificationType={notificationType}\n        message={notificationMessage}\n      />\n      <Filter\n        searchTerm={searchTerm}\n        filterChangeHandler={handleFilterChange}\n        clearFilter={() => setSearchTerm(\"\")}\n      />\n      <Form\n        submitHandler={handlePersonAdd}\n        nameValue={newName}\n        phoneValue={newPhone}\n        nameChangeHandler={handleNameChange}\n        numberChangeHandler={handlePhoneChange}\n      />\n      <Persons persons={filteredPersons()} deleteHandler={deletePerson} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}